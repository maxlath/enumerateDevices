(function(e){if("function"==typeof bootstrap)bootstrap("getmediadevices",e);else if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeGetMediaDevices=e}else"undefined"!=typeof window?window.getMediaDevices=e():global.getMediaDevices=e()})(function(){var define,ses,bootstrap,module,exports;
return (function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require=="function"&&require;if(!s&&o)return o(n,!0);if(r)return r(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=t[n]={exports:{}};e[n][0].call(u.exports,function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require=="function"&&require;for(var s=0;s<n.length;s++)i(n[s]);return i})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.9.0
(function() {
  module.exports = function(cb) {
    var processDevices, _ref, _ref1;
    if (!cb || typeof cb !== 'function') {
      throw new Error('callback must be provided to enumerate devices');
    }
    processDevices = function(devices) {
      var device, normalizedDevices, _i, _len;
      normalizedDevices = [];
      for (_i = 0, _len = devices.length; _i < _len; _i++) {
        device = devices[_i];
        normalizedDevices.push({
          facing: device.facing || null,
          id: device.id || device.deviceId || null,
          label: device.label || null,
          kind: device.kind || null,
          groupId: device.groupId || null
        });
      }
      return cb(normalizedDevices);
    };
    if ((_ref = window.navigator.mediaDevices) != null) {
      if (typeof _ref.enumerateDevices === "function") {
        _ref.enumerateDevices().then(processDevices);
      }
    }
    if ((_ref1 = window.MediaStreamTrack) != null) {
      if (typeof _ref1.getSources === "function") {
        _ref1.getSources(processDevices);
      }
    }
    return null;
  };

}).call(this);

},{}]},{},[1])(1)
});
;